#!/usr/bin/env ruby
# encoding: UTF-8

require 'net/https'
require 'json'

class GitLogs
  attr_accessor :raw_log, :commit_data
  def initialize
    self.raw_log = `git log --no-color --format=short -1`.force_encoding('utf-8')
    parse!
    self
  end

  def parse!
    regexp  = /commit\ (.*)\nAuthor:\ (.*)\n\n\s*(.*)/i
    match   = raw_log.scan(regexp).flatten
    self.commit_data = GitLog.new(match[0], match[1], match[2])
  end

  def pivotal_sync!
    Pivotal.new(commit_data).send!
  end
end

class GitLog
  attr_accessor :hash, :author, :message
  def initialize hash, author, message
    self.hash     = hash
    self.author   = author
    self.message  = message
  end

  def to_json
    { source_commit:
      { commit_id:  self.hash,
        author:     self.author,
        message:    self.message,
      }
    }.to_json
  end
end

class Pivotal
  attr_accessor :git_log, :tracker_token
  BASE_URI = URI('https://www.pivotaltracker.com/')
  def initialize git_log
    self.git_log        = git_log
    self.tracker_token  = get_token
  end

  def get_token
    `git config --get pivotal.token`.strip
  end

  def send!
    https = Net::HTTP.start(BASE_URI.host, 443, {
      use_ssl:      true,
      verify_mode:  OpenSSL::SSL::VERIFY_NONE
    })

    request = Net::HTTP::Post.new('/services/v5/source_commits')
    request['X-TrackerToken'] = tracker_token
    request['Content-type']   = 'application/json'
    request.body              = git_log.to_json

    response                  = https.request(request)
  end
end

GitLogs.new().pivotal_sync!
